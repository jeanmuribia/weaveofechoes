Voici la version mise à jour du pseudo code avec la correction pour le point 3 :

Si baseValue = malus :

Toutes les cases de wounds (wound1, wound2, wound3) sont inactives (non cochables).
Si baseValue n'est pas malus :

Wound 1 est cochable.
Wound 2 et Wound 3 sont inactives (non cochables).
Si on coche wound 1 :

currentValue devient malus (ou se dégrade d'un cran).
Wound 1 reste décochable.
Wound 2 devient cochable uniquement si currentValue n'est pas malus.
Wound 3 reste inactive.
Si on coche wound 2 :

currentValue devient malus (ou se dégrade d'un cran).
Wound 1 devient inactive mais reste cochée.
Wound 2 reste décochable.
Wound 3 devient cochable uniquement si currentValue n'est pas malus.
Si on coche wound 3 :

currentValue devient malus (ou se dégrade d'un cran).
Wound 1 et Wound 2 deviennent inactives mais restent cochées.
Wound 3 reste décochable.
Si on décoche wound 3 :

currentValue monte d'un cran.
Wound 3 devient décochée et cochable.
Wound 2 devient décochable.
Wound 1 reste inactive.
Si on décoche wound 2 :

currentValue monte d'un cran.
Wound 2 devient décochée mais cochable.
Wound 1 devient décochable et cochée.
Wound 3 devient inactive.
Si on décoche wound 1 :

currentValue monte d'un cran.
Wound 1 devient décochée et cochable.
Wound 2 et Wound 3 deviennent inactives et décochées.






Synergy : 

Here's a rephrased version of your synergy system plan:

Relationships:
In the "Relationships" tab, there will be an "Add Relationship" button. Upon clicking it, the user can input the player's name, the character's name, and select a relationship value from a radio button scale ranging from -3 to +3 (7 options in total). These labels can be customized later. The character's name will appear as a dropdown menu that lists all other player characters (PCs) in the game, allowing you to select and link to them.

Generate Synergy Points (GM Feature):
As the GM, you'll have access to a "Generate Synergy Points" button on your screen. When you click it, a window will open displaying all playable characters. You can select any number of characters, and based on the interpersonal relationships between those selected characters, a certain number of synergy points will be generated using a predefined formula we'll create later.

Manual Synergy Points Management (GM Feature):
As the GM, you'll also have the ability to manually add or remove synergy points for the characters. This will be done through + and - buttons, allowing you to adjust the synergy points as needed.



D'accord, je comprends la nouvelle fonctionnalité de Focus Point que vous souhaitez implémenter. Voici une liste structurée des éléments à mettre en place pour cette fonctionnalité :

Modifications de l'Actor Sheet (actor-character-sheet.hbs et actor-sheet.mjs) :
a. Ajouter un cercle avec le label "Focus Points" affichant le nombre de points actuels.
b. Implémenter une case à cocher pour la visibilité du Focus Point.
c. Mettre à jour dynamiquement l'affichage des Focus Points en fonction des changements.
Création du module Focus Tracker (focus-tracker.mjs et focus-tracker.hbs) :
a. Créer une fenêtre similaire au Synergy Tracker.
b. Implémenter une liste de personnages avec leurs Focus Points.
c. Ajouter des boutons +, -, et "Generate" pour chaque personnage.
d. Ajouter un bouton "Generate All Focus" en bas du module.
e. Implémenter la logique de calcul des Focus Points basée sur les relations.
Modifications de l'Actor (actor.mjs) :
a. Ajouter des propriétés pour stocker les Focus Points (base, current, visibility).
b. Implémenter des méthodes pour calculer et mettre à jour les Focus Points.
Modifications du fichier principal (weave_of_echoes.mjs) :
a. Intégrer le nouveau Focus Tracker au système.
b. Ajouter des hooks pour mettre à jour les Focus Points lors des changements de relations ou de groupe.
Mise à jour du CSS (weave_of_echoes.css) :
a. Ajouter des styles pour le cercle de Focus Points sur l'Actor Sheet.
b. Créer des styles pour le nouveau module Focus Tracker.
Logique de calcul des Focus Points :
a. Implémenter la formule de calcul basée sur les relations négatives.
b. Mettre à jour dynamiquement les valeurs en fonction des changements de relations et de groupe.
Gestion de la visibilité :
a. Implémenter la logique pour cacher/afficher les Focus Points en fonction de la case à cocher.
b. Assurer que seul le MJ et le propriétaire du personnage peuvent voir les Focus Points cachés.
Intégration avec le système existant :
a. S'assurer que le Focus Tracker fonctionne en harmonie avec le Synergy Tracker existant.
b. Vérifier que les mises à jour des relations affectent correctement les Focus Points.

Avant de commencer l'implémentation, il serait judicieux de créer des maquettes ou des diagrammes pour visualiser l'interface utilisateur et les flux de données. Ensuite, nous pourrons procéder à l'implémentation étape par étape, en commençant par les modifications de l'Actor et de l'Actor Sheet, puis en créant le nouveau module Focus Tracker.






  // Créer le contenu HTML pour la dialog avec une grille de groupes
  const dialogContent = `
    <form>
      <div class="available-groups-grid">
        ${availableGroups.map(group => {
          const leader = game.actors.get(group.leader);
          const members = group.members.map(id => game.actors.get(id)).filter(Boolean);
          
          return `
            <div class="group-card" data-group-id="${group.id}">
              <div class="group-header">
                <h3>${group.name}</h3>
              </div>
              <div class="group-members-avatars">
                ${members.map(member => `
                  <div class="member-avatar" title="${member.name}">
                    <img src="${member.img}" alt="${member.name}"/>
                  </div>
                `).join('')}
              </div>
              <button class="join-group-btn" type="button" data-group-id="${group.id}">
                Join Group
              </button>
            </div>
          `;
        }).join('')}
      </div>
    </form>

    <style>
  .available-groups-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    padding: 1rem;
  }

  .group-card {
    background: rgba(0, 0, 0, 0.05);
    border-radius: 8px;
    padding: 1rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 180px; /* Hauteur fixe pour uniformité */
  }

  .group-header h3 {
    margin: 0;
    font-size: 1.2em;
    border-bottom: none; /* Enlève la ligne sous le titre */
  }

  .group-members-avatars {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 1; /* Prend l'espace disponible */
    margin: 1rem 0;
  }

  .member-avatar {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    overflow: hidden;
    border: 2px solid #4b4b4b;
  }

  .member-avatar img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .join-group-btn {
    background: #4b4b4b;
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background 0.2s;
    width: 100%; /* Le bouton prend toute la largeur */
  }

  .join-group-btn:hover {
    background: #666;
  }
</style>
  `;